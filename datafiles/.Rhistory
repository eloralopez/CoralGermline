geom_point(size = 3) +
#geom_point(position="dodge", stat="identity")
geom_errorbar(aes(ymin=mean-SE, ymax=mean+SE),
width=0.1, position=position_dodge(width=0.6)) +
theme_bw()
ratios_means<-c(mean(ratios_n_GOH),mean(ratios_i_GOH),mean(ratios_uglm_GOH), mean(ratios_n_LOH),mean(ratios_i_LOH),mean(ratios_uglm_LOH),mean(ratios_n),mean(ratios_i),mean(ratios_uglm))
ratios_ses<-c(se(ratios_n_GOH),se(ratios_i_GOH),se(ratios_uglm_GOH), se(ratios_n_LOH),se(ratios_i_LOH),se(ratios_uglm_LOH), se(ratios_n), se(ratios_i),se(ratios_uglm))
ratios_frame<-data.frame("mean"=ratios_means, "SE"=ratios_ses, "Type"=c(rep("GOH",3),rep("LOH",3),rep("both",3)),
"shared"=rep(c("PO","P+S","SSPO"),3))
ratiosplot<-ggplot(ratios_frame,
aes(x = shared,
y = mean,
group = Type, colour=Type)) +
geom_point(size = 3, position=position_dodge(width=0.6)) +
#geom_point(position="dodge", stat="identity")
geom_errorbar(aes(ymin=mean-SE, ymax=mean+SE),
width=0.1, position=position_dodge(width=0.6)) +
theme_bw()
persampleaveragesplot<-
##this is figure2:
(meanfreqpersampleplot | meanfreqpersampleplot_coding) /(comparisonplotinh2 & theme(strip.placement = NULL) / inheritedpermillionplot)
##this is figure2:
(comparisonplotinh2 & theme(strip.placement = NULL)) /(combined_plot_faceted & theme(strip.placement = NULL)/ inheritedpermillionplot)
comparisonplotinh2 & theme(strip.placement = NULL) | meanfreqpersampleplot
Figure2<-  (comparisonplotinh2 & theme(strip.placement = NULL) | persampleaveragesplot) /(meanpercentdataplot | z2)
Figure2_fordiss<- (comparisonplotinh2 & theme(strip.placement = NULL) ) /(meanpercentdataplot | z2)
#for ahya:
(comparisonplotinh2 & theme(strip.placement = NULL) | justfull) /(meanpercentdataplot | z2)
#png("myplot.png")
#print(Figure2)
#dev.off()
##supp table 2:
CA56_inherited$chrom.pos<-paste(CA56_inherited$chrom, ".",CA56_inherited$pos, sep="")
#c56i<-c56[match(CA56_inherited$chrom.pos, c56$chrom.pos),]
CA56_notinherited$chrom.pos<-paste(CA56_notinherited$chrom, ".",CA56_notinherited$pos, sep="")
#c56i<-c56[match(CA56_inherited$chrom.pos, c56$chrom.pos),]
m =NULL
matching_func<-function(CA60_inherited,metadatadf.0CA60) {
m =NULL
CA60_inherited$chrom.pos<-paste(CA60_inherited$chrom, ".",CA60_inherited$pos, sep="")
for (i in 1:nrow(CA60_inherited)) {
subz<-subset(metadatadf.0CA60,chrom.pos==CA60_inherited$chrom.pos[i])
m<-rbind(m,subz)
}
m$Inheritance<-rep(CA60_inherited$Inheritance[i], nrow(m))
return(m)
}
suppCA56n<-matching_func(CA56_notinherited, metadatadf.0CA56)
suppCA56i<-matching_func(CA56_inherited, metadatadf.0CA56)
suppCA60n<-matching_func(CA60_notinherited, metadatadf.0CA60)
suppCA60i<-matching_func(CA60_inherited, metadatadf.0CA60)
suppCA65n<-matching_func(CA65_notinherited, metadatadf.0CA65)
suppCA65i<-matching_func(CA65_inherited, metadatadf.0CA65)
matching_func_glm<-function(CA60_inherited,metadatadf.0CA60) {
m =NULL
for (i in 1:nrow(CA60_inherited)) {
subz<-subset(metadatadf.0CA60,chrom.pos==CA60_inherited$chrom.pos[i])
m<-rbind(m,subz)
}
m$Inheritance<-rep("N/A", nrow(m))
return(m)
}
suppCA56uglm<-matching_func_glm(uniqueuglmCA56df, metadatadf.0CA56)
suppCA60uglm<-matching_func_glm(uniqueuglmCA60df, metadatadf.0CA60)
suppCA65uglm<-matching_func_glm(uniqueuglmCA65df, metadatadf.0CA65)
suppCA56gglm<-matching_func_glm(gglmCA56df, metadatadf.0CA56)
suppCA60gglm<-matching_func_glm(gglmCA60df, metadatadf.0CA60)
suppCA65gglm<-matching_func_glm(gglmCA65df, metadatadf.0CA65)
supptable2_uglm$Inheritance<-rep("N/A",nrow(supptable2_uglm))
supptable2_gglm<-allcol_gglm
supptable2_gglm$Inheritance<-rep("N/A",nrow(supptable2_gglm))
everything<-rbind(suppCA56n, suppCA56i,suppCA60n,suppCA60i,suppCA65n,suppCA65i,suppCA56uglm, suppCA60uglm, suppCA65uglm, suppCA56gglm,  suppCA60gglm, suppCA65gglm)
everything_forsupp<-subset(everything, select = -c(mutant_allele_depth,TrueorFalse,totaldepth.y,GQscore.y,totaldepth,GQscore) )
#write.table(everything_forsupp, file="~/Documents/GitHub/CoralGermline/suppfiles/SupplementaryTable2_mappedtoahya.txt",sep="\t",quote=FALSE, row.name=FALSE)
#write.table(everything_forsupp, file="~/Documents/Dissertation/Chapter2_SupplementaryTableS2.txt",sep="\t",quote=FALSE, row.name=FALSE)
uniqueeverything<-everything[match(unique(everything$chrom.pos), everything$chrom.pos),]
combined_plot_faceted
head(meanfreqpersampleplot_combined_more)
meanfreqpersampleplot<-freq_func(CA56n, CA56denom, CA60n, CA60denom, CA65n, CA65denom, CA56i, CA60i, CA65i, CA56uglm,CA60uglm,CA65uglm)
meanfreqpersampleplot
meanfreqpersampleplot$Type<-rep("LOH+GOH",3)
coding_combined_plot
combined_plot_faceted<-ggplot(meanfreqpersampleplot_combined_more,
aes(x = shared,
y = meansamplefreqspermillion,
group = secondgroup, colour=Type,shape=corno)) +
geom_point(size = 3, position=position_dodge(width=0.6), aes(shape=corno)) +
#geom_point(position="dodge", stat="identity")
geom_errorbar(aes(ymin=meansamplefreqspermillion-(meansamplefreqspermillion_se), ymax=meansamplefreqspermillion+(meansamplefreqspermillion_se)),
width=0.1, position=position_dodge(width=0.6)) +
theme_bw() +
theme(axis.text=element_text(size=15),
axis.title=element_text(size=15),
axis.text.x = element_text(angle = 90),
legend.text=element_text(size=15),legend.title=element_text(size=15))+
scale_y_continuous(trans='log10')+
labs(y="# SNVs per Mbp per sample", x="")#+
combined_plot_faceted
#figure 2b:
combined_plot_faceted<-ggplot(meanfreqpersampleplot_combined_more,
aes(x = shared,
y = persamplemeans,
group = secondgroup, colour=Type,shape=corno)) +
geom_point(size = 3, position=position_dodge(width=0.6), aes(shape=corno)) +
#geom_point(position="dodge", stat="identity")
geom_errorbar(aes(ymin=persamplemeans-(persampleses), ymax=persamplemeans+(persampleses)),
width=0.1, position=position_dodge(width=0.6)) +
theme_bw() +
theme(axis.text=element_text(size=15),
axis.title=element_text(size=15),
axis.text.x = element_text(angle = 90),
legend.text=element_text(size=15),legend.title=element_text(size=15))+
labs(y="# SNVs per bp per sample", x="")  +
scale_y_continuous(trans='log10')
combined_plot_faceted
#figure 2b:
combined_plot_faceted<-ggplot(meanfreqpersampleplot_combined_more,
aes(x = shared,
y = persamplemeans,
group = secondgroup, colour=Type,shape=corno)) +
geom_point(size = 3, position=position_dodge(width=0.6), aes(shape=corno)) +
#geom_point(position="dodge", stat="identity")
geom_errorbar(aes(ymin=persamplemeans-(persampleses), ymax=persamplemeans+(persampleses)),
width=0.1, position=position_dodge(width=0.6)) +
theme_bw() +
theme(axis.text=element_text(size=15),
axis.title=element_text(size=15),
axis.text.x = element_text(angle = 90),
legend.text=element_text(size=15),legend.title=element_text(size=15))+
labs(y="# SNVs per bp per sample", x="")
combined_plot_faceted
frplot
fr
ratios_LOH
ratios_n_GOH
filepath<-"~/Documents/GitHub/CoralGermline/mappedtoahya/"
dnds_func<-function(filepath) {
dataset<-read.delim(filepath)
base<-basename(filepath)
colony<-strsplit(base, "\\_")[[1]][1]
dndsout = dndscv(dataset, refdb="Ahyacinthus_CDS_20210615.rda", cv=NULL)
return(dndsout)
global<-dndsout$globaldnds
sel_loc<-dndsout$sel_loc
annot_muts<-dndsout$annotmuts
codon_sub<- annot_muts$codonsub
codon_sub<-factor(codon_sub)
#return(codon_sub)
dataglobal<-data.frame(global)
mle_score<-global$mle
wall<-subset(global,name=="wall")
wall<-data.frame(wall)
wmis<-subset(global,name=="wmis")
wmis<-data.frame(wmis)
wnon<-subset(global,name=="wnon")
wnon<-data.frame(wnon)
wlist<-list("wall"=wall, "wmis"=wmis, "wnon"=wnon)
#return(wall)
#return(wlist)
}
Ahya_fasta<-read.fasta("~/Documents/GitHub/CoralGermline/mappedtoahya/jasmine-sta1387-mb-hirise-eyx9u_12-15-2020__final_assembly_chrs.fasta", forceDNAtolower = FALSE)
library("seqinr")
library(patchwork)
Ahya_fasta<-read.fasta("~/Documents/GitHub/CoralGermline/mappedtoahya/jasmine-sta1387-mb-hirise-eyx9u_12-15-2020__final_assembly_chrs.fasta", forceDNAtolower = FALSE)
Ahya_fasta<-read.fasta("~/Documents/GitHub/CoralGermline/mappedtoahya/jasmine-sta1387-mb-hirise-eyx9u_12-15-2020__final_assembly_chrs.fasta", forceDNAtolower = FALSE)
spectrum<- function(dataframe, dataframecount) {
#Amil_fasta<-read.fasta("~/Documents/GitHub/CoralGermline/dndscv/Amil.v2.01.chrs.fasta",forceDNAtolower = FALSE)
WhattoWhat<-rep("Placeholder",nrow(dataframe))
TiorTv<-rep("Placeholder",nrow(dataframe))
ref<-as.character(dataframe$ref)
alt<-as.character(dataframe$alt)
for (i in 1:nrow(dataframe)) {
if (ref[i] == "C" & alt[i] == "A") {
WhattoWhat[i] <- 'CtoA'
TiorTv[i]<-"Tv"
#gh[i] <- 'CtoA'
#print("ya")
#print(i)
#print(AtG[i])
} else if (ref[i] == "A" & alt[i] == "C")  {
WhattoWhat[i] <- "AtoC"
TiorTv[i]<-"Tv"
} else if (ref[i] == "A" & alt[i] == "G") {
WhattoWhat[i] <- "AtoG"
TiorTv[i]<-"Ti"
} else if (ref[i] == "G" & alt[i] == "A") {
WhattoWhat[i] <- 'GtoA'
TiorTv[i]<-"Ti"
} else if (ref[i] == "G" & alt[i] == "T") {
WhattoWhat[i] <- "GtoT"
TiorTv[i]<-"Tv"
} else if (ref[i] == "T" & alt[i] == "G") {
WhattoWhat[i] <- "TtoG"
TiorTv[i]<-"Tv"
} else if (ref[i] == "T" & alt[i] == "C") {
WhattoWhat[i] <- "TtoC"
TiorTv[i]<-"Ti"
} else if (ref[i] == "C" & alt[i] == "T") {
WhattoWhat[i] <-"CtoT"
TiorTv[i]<-"Ti"
} else if (ref[i] == "C" & alt[i] == "G") {
WhattoWhat[i] <- "CtoG"
TiorTv[i]<-"Tv"
} else if (ref[i] == "G" & alt[i] == "C") {
WhattoWhat[i] <-"GtoC"
TiorTv[i]<-"Tv"
} else if (ref[i] == "T" & alt[i] == "A") {
WhattoWhat[i] <- "TtoA"
TiorTv[i]<-"Tv"
} else if (ref[i] == "A" & alt[i] == "T") {
WhattoWhat[i] <-"AtoT"
TiorTv[i]<-"Tv"
}
}
together<-cbind(dataframe, WhattoWhat,TiorTv)
togethercount<-nrow(together)
verATGClist<-together[ which(together$WhattoWhat=="AtoG" | together$WhattoWhat=="TtoC"),]
verATGCcount<-nrow(verATGClist)
verATGCprop<-verATGCcount/togethercount
SEverATGCprop<-se(verATGCprop)
verGCATlist<-together[ which(together$WhattoWhat=="GtoA" | together$WhattoWhat=="CtoT"),]
verGCATcount<-nrow(verGCATlist)
verGCATprop<-verGCATcount/togethercount
CpGdf<-data.frame(Date=as.Date(character()))
CpHdf<-data.frame(Date=as.Date(character()))
all<-NULL
for (i in 1:nrow(together)) {
if (together$WhattoWhat[i] == "CtoT") {
character<-as.character(together$pos[i])
integer<-as.integer(character)
next_position<-integer + 1
chr_num<-as.character(together$chrom[i])
chroms<-Ahya_fasta[[chr_num]]
ref_nuc<- chroms[next_position]
ref_nuc<-toupper(ref_nuc)
allnucs<-data.frame(ref_nuc)
all<-rbind(all,allnucs)
if (ref_nuc == "G") {
#print(ref_nuc)
Gnucs<-data.frame(ref_nuc)
CpGdf<-rbind(CpGdf, Gnucs)
} else if (ref_nuc == "A"| ref_nuc == "C"| ref_nuc == "T") {
othernucs<-data.frame(ref_nuc)
CpHdf<-rbind(CpHdf,othernucs)
}
} else if (together$WhattoWhat[i] == "GtoA") {
character<-as.character(together$pos[i])
integer<-as.integer(character)
next_position<-integer + 1
chr_num<-as.character(together$chrom[i])
chroms<-Ahya_fasta[[chr_num]]
ref_nuc<- chroms[next_position]
ref_nuc<-toupper(ref_nuc)
allnucs<-data.frame(ref_nuc)
all<-rbind(all,allnucs)
if (ref_nuc == "C") {
#print(ref_nuc)
Gnucs<-data.frame(ref_nuc)
CpGdf<-rbind(CpGdf, Gnucs)
} else if (ref_nuc == "A"| ref_nuc == "G"| ref_nuc == "T") {
othernucs<-data.frame(ref_nuc)
CpHdf<-rbind(CpHdf,othernucs)
}
}
}
CpGcount<-nrow(CpGdf)
CpHcount<-nrow(CpHdf)
CpGprop<- CpGcount/togethercount
CpHprop<- CpHcount/togethercount
verATTAlist<-together[ which(together$WhattoWhat=="AtoT" | together$WhattoWhat=="TtoA"),]
verATTAcount<-nrow(verATTAlist)
verATTAprop<-verATTAcount/togethercount
verACTGlist<-together[ which(together$WhattoWhat=="AtoC" | together$WhattoWhat=="TtoG"),]
verACTGcount<-nrow(verACTGlist)
verACTGprop<-verACTGcount/togethercount
verGCCGlist<-together[ which(together$WhattoWhat=="CtoG" | together$WhattoWhat=="GtoC"),]
verGCCGcount<-nrow(verGCCGlist)
verGCCGprop<-verGCCGcount/togethercount
verGCTAlist<-together[ which(together$WhattoWhat=="GtoT" | together$WhattoWhat=="CtoA"),]
verGCTAcount<-nrow(verGCTAlist)
verGCTAprop<-verGCTAcount/togethercount
binomATGC<-dbinom(verATGCcount, togethercount, verATGCprop)
sdATGC<-togethercount*verATGCprop*(1-verATGCprop)
seATGC<- sdATGC/sqrt(togethercount)
binomGCAT<-dbinom(verGCATcount, togethercount, verGCATprop)
sdGCAT<-togethercount*verGCATprop*(1-verGCATprop)
seGCAT<- sdGCAT/sqrt(togethercount)
binomCpG<-dbinom(CpGcount, togethercount, CpGprop)
sdCpG<-togethercount*CpGprop*(1-CpGprop)
seCpG<-sdCpG/sqrt(togethercount)
binomCpH<-dbinom(CpHcount, togethercount, CpHprop)
sdCpH<-togethercount*CpHprop*(1-CpHprop)
seCpH<-sdCpH/sqrt(togethercount)
binomATTA<-dbinom(verATTAcount, togethercount, verATTAprop)
sdATTA<-togethercount*verATTAprop*(1-verATTAprop)
seATTA<- sdATTA/sqrt(togethercount)
binomACTG<-dbinom(verACTGcount, togethercount, verACTGprop)
sdACTG<-togethercount*verACTGprop*(1-verACTGprop)
seACTG<- sdACTG/sqrt(togethercount)
binomGCCG<-dbinom(verGCCGcount, togethercount, verGCCGprop)
sdGCCG<-togethercount*verGCCGprop*(1-verGCCGprop)
seGCCG<- sdGCCG/sqrt(togethercount)
binomGCTA<-dbinom(verGCTAcount, togethercount, verGCTAprop)
sdGCTA<-togethercount*verGCTAprop*(1-verGCTAprop)
seGCTA<- sdGCTA/sqrt(togethercount)
standarderrors<-c(seATGC, seCpG, seCpH, seATTA, seACTG, seGCCG, seGCTA)
se_forprops<-standarderrors/togethercount
vertypesDF<-data.frame(Types=c("A>G/T>C","CpG", "CpH", "A>T/T>A","A>C/T>G","G>C/C>G","G>T/C>A"), coralProportion=c(verATGCprop, CpGprop, CpHprop, verATTAprop,verACTGprop, verGCCGprop, verGCTAprop),se_forprops)
#pmdf$MutType<- factor(pmdf$MutType,levels=c("synonymous","missense","nonsense"))
vertypesDF$Types<-factor(vertypesDF$Types,levels=c("A>G/T>C","CpG", "CpH", "A>T/T>A","A>C/T>G","G>C/C>G","G>T/C>A"))
#MUTATION SPECTRUM PLOT:
#vertypesDFplot<-barplot(vertypesDF$coralProportion,names.arg=vertypesDF$Types, ylim=c(0,0.7), main="allmuts", las=2) #Figure 4a
z<- ggplot(vertypesDF, aes(x=Types, y=coralProportion)) +
#scale_fill_manual(value=c("white"))+
geom_bar(stat="identity") +
ylim(0, 0.35)+
theme_bw()+
ylab("Proportion of SNVs") +
theme(axis.text.x = element_text(angle = 90, size=18), axis.text.y=element_text(size=15),axis.title.y=element_text(size=15))+#, axis.text.x=element_text(size=25))+
geom_errorbar(aes(ymin=coralProportion-(se_forprops), ymax=coralProportion+(se_forprops)))#, width=.2,
Transtions<- verATGCprop + verGCATprop
Transversions<- verATTAprop+verACTGprop+verGCCGprop+verGCTAprop
TiTv<- Transtions/Transversions
counts<-c(verATGCcount,CpGcount, CpHcount, verATTAcount, verACTGcount, verGCCGcount, verGCTAcount)
return(z)
#return(list(vertypesDF, TiTv))
#return(list(z, vertypesDF))
#return(z)
#return(counts)
}
#11/17/2020:
CA56_somatic_all<-spectrum(CA56_,nrow(CA56_))
CA60_somatic_all<-spectrum(CA60_,nrow(CA60_))
CA65_somatic_all<-spectrum(CA65_,nrow(CA65_))
allcol<-rbind(CA56_,CA60_,CA65_)
all_som_GOH_inherited<-subset(allcol,GoHorLoH=="DeNovo"&Inheritance=="inherited"&ParentAverage>0.5)
all_som_GOH_notinherited<-subset(allcol,GoHorLoH=="DeNovo"& Inheritance=="notinherited")
allcol_somatic_all<-spectrum(allcol,nrow(allcol)) + ggtitle("All Somatic Mutations")
allcol_somatic_all_dndscv<-data.frame("sampleID"= allcol$sample,"chr"= allcol$chrom,"pos"= allcol$pos, "ref" = allcol$ref, "alt"= allcol$alt)
allcol_somatic_GOH<-spectrum(subset(allcol, GoHorLoH=="DeNovo"),nrow(subset(allcol, GoHorLoH=="DeNovo")))+ggtitle("GoH SNVs found in Parents")
allcol_somatic_GOH_dndscv<-data.frame("sampleID"= subset(allcol, GoHorLoH=="DeNovo")$sample,"chr"= subset(allcol, GoHorLoH=="DeNovo")$chrom,"pos"= subset(allcol, GoHorLoH=="DeNovo")$pos, "ref" = subset(allcol, GoHorLoH=="DeNovo")$ref, "alt"= subset(allcol, GoHorLoH=="DeNovo")$alt)
allcol_somatic_LOH<-spectrum(subset(allcol, GoHorLoH=="LoH"),nrow(subset(allcol, GoHorLoH=="LoH")))+ggtitle("LoH SNVs found in Parents")
allcol_somatic_LOH_dndscv<-data.frame("sampleID"= subset(allcol, GoHorLoH=="LoH")$sample,"chr"= subset(allcol, GoHorLoH=="LoH")$chrom,"pos"= subset(allcol, GoHorLoH=="LoH")$pos, "ref" = subset(allcol, GoHorLoH=="LoH")$ref, "alt"= subset(allcol, GoHorLoH=="LoH")$alt)
#write.table(allcol_somatic_LOH_dndscv, file="~/Documents/GitHub/CoralGermline/dndscv/somaticallcoloniesLOH_20201210_dndscv.txt",sep="\t",quote=FALSE, row.name=FALSE)
all_GOH<-subset(allcol, GoHorLoH=="DeNovo")
all_LOH<-subset(allcol, GoHorLoH=="LoH")
CA56_somatic_inherited<-spectrum(subset(CA56_, Inheritance=="inherited"), nrow(subset(CA56_, Inheritance=="inherited")))
CA56_somatic_inherited_dndscv<-data.frame("sampleID"= subset(CA56_, Inheritance=="inherited")$sample,"chr"= subset(CA56_, Inheritance=="inherited")$chrom,"pos"= subset(CA56_, Inheritance=="inherited")$pos, "ref" = subset(CA56_, Inheritance=="inherited")$ref, "alt"= subset(CA56_, Inheritance=="inherited")$alt)
CA60_somatic_inherited<-spectrum(subset(CA60_, Inheritance=="inherited"), nrow(subset(CA60_, Inheritance=="inherited")))
CA60_somatic_inherited_dndscv<-data.frame("sampleID"= subset(CA60, Inheritance=="inherited")$sample,"chr"= subset(CA60, Inheritance=="inherited")$chrom,"pos"= subset(CA60, Inheritance=="inherited")$pos, "ref" = subset(CA60, Inheritance=="inherited")$ref, "alt"= subset(CA60, Inheritance=="inherited")$alt)
CA60_somatic_inherited_dndscv<-data.frame("sampleID"= subset(CA60_, Inheritance=="inherited")$sample,"chr"= subset(CA60_, Inheritance=="inherited")$chrom,"pos"= subset(CA60, Inheritance=="inherited")$pos, "ref" = subset(CA60, Inheritance=="inherited")$ref, "alt"= subset(CA60, Inheritance=="inherited")$alt)
CA60_somatic_inherited_dndscv<-data.frame("sampleID"= subset(CA60_, Inheritance=="inherited")$sample,"chr"= subset(CA60_, Inheritance=="inherited")$chrom,"pos"= subset(CA60_, Inheritance=="inherited")$pos, "ref" = subset(CA60_, Inheritance=="inherited")$ref, "alt"= subset(CA60_, Inheritance=="inherited")$alt)
#write.table(CA60_somatic_inherited_dndscv, file="~/Documents/GitHub/CoralGermline/dndscv/somaticCA60inherited_20201203_dndscv.txt",sep="\t",quote=FALSE, row.name=FALSE)
CA65_somatic_inherited<-spectrum(subset(CA65_, Inheritance=="inherited"), nrow(subset(CA65_, Inheritance=="inherited")))
CA65_somatic_inherited_dndscv<-data.frame("sampleID"= subset(CA65_, Inheritance=="inherited")$sample,"chr"= subset(CA65_, Inheritance=="inherited")$chrom,"pos"= subset(CA65_, Inheritance=="inherited")$pos, "ref" = subset(CA65_, Inheritance=="inherited")$ref, "alt"= subset(CA65_, Inheritance=="inherited")$alt)
#write.table(CA65_somatic_inherited_dndscv, file="~/Documents/GitHub/CoralGermline/dndscv/somaticCA65oniesinherited_20201203_dndscv.txt",sep="\t",quote=FALSE, row.name=FALSE)
allcol_somatic_inherited<-spectrum(subset(allcol, Inheritance=="inherited"), nrow(subset(allcol, Inheritance=="inherited"))) +ggtitle("Shared Parent and Sperm SNVs")
allcol_somatic_inherited_dndscv<-data.frame("sampleID"= subset(allcol, Inheritance=="inherited")$sample,"chr"= subset(allcol, Inheritance=="inherited")$chrom,"pos"= subset(allcol, Inheritance=="inherited")$pos, "ref" = subset(allcol, Inheritance=="inherited")$ref, "alt"= subset(allcol, Inheritance=="inherited")$alt)
#write.table(allcol_somatic_inherited_dndscv, file="~/Documents/GitHub/CoralGermline/dndscv/somaticallcoloniesinherited_20201210_dndscv.txt",sep="\t",quote=FALSE, row.name=FALSE)
allcol_somatic_inherited_GOH_dndscv<-data.frame("sampleID"= subset(allcol, Inheritance=="inherited" & GoHorLoH=="DeNovo")$sample,"chr"= subset(allcol, Inheritance=="inherited" & GoHorLoH=="DeNovo")$chrom,"pos"= subset(allcol, Inheritance=="inherited" & GoHorLoH=="DeNovo")$pos, "ref" = subset(allcol, Inheritance=="inherited" & GoHorLoH=="DeNovo")$ref, "alt"= subset(allcol, Inheritance=="inherited" & GoHorLoH=="DeNovo")$alt)
allcol_somatic_inherited_LOH_dndscv<-data.frame("sampleID"= subset(allcol, Inheritance=="inherited" & GoHorLoH=="LoH")$sample,"chr"= subset(allcol, Inheritance=="inherited" & GoHorLoH=="LoH")$chrom,"pos"= subset(allcol, Inheritance=="inherited" & GoHorLoH=="LoH")$pos, "ref" = subset(allcol, Inheritance=="inherited" & GoHorLoH=="LoH")$ref, "alt"= subset(allcol, Inheritance=="inherited" & GoHorLoH=="LoH")$alt)
CA56_somatic_notinherited<-spectrum(subset(CA56_, Inheritance=="notinherited"), nrow(subset(CA56_, Inheritance=="notinherited")))
CA60_somatic_notinherited<-spectrum(subset(CA60_, Inheritance=="notinherited"), nrow(subset(CA60_, Inheritance=="notinherited")))
CA65_somatic_notinherited<-spectrum(subset(CA65_, Inheritance=="notinherited"), nrow(subset(CA65_, Inheritance=="notinherited")))
allcol_somatic_notinherited<-spectrum(subset(allcol, Inheritance=="notinherited"), nrow(subset(allcol, Inheritance=="notinherited")))+ ggtitle("Parent Only SNVs")
allcol_somatic_notinherited_dndscv<-data.frame("sampleID"= subset(allcol, Inheritance=="notinherited")$sample,"chr"= subset(allcol, Inheritance=="notinherited")$chrom,"pos"= subset(allcol, Inheritance=="notinherited")$pos, "ref" = subset(allcol, Inheritance=="notinherited")$ref, "alt"= subset(allcol, Inheritance=="notinherited")$alt)
#write.table(allcol_somatic_notinherited_dndscv, file="~/Documents/GitHub/CoralGermline/dndscv/somaticallcoloniesnotinherited_20201210_dndscv.txt",sep="\t",quote=FALSE, row.name=FALSE)
allcol_somatic_notinherited_GOH_dndscv<-data.frame("sampleID"= subset(allcol, Inheritance=="notinherited" & GoHorLoH=="DeNovo")$sample,"chr"= subset(allcol, Inheritance=="notinherited" & GoHorLoH=="DeNovo")$chrom,"pos"= subset(allcol, Inheritance=="notinherited" & GoHorLoH=="DeNovo")$pos, "ref" = subset(allcol, Inheritance=="notinherited" & GoHorLoH=="DeNovo")$ref, "alt"= subset(allcol, Inheritance=="notinherited" & GoHorLoH=="DeNovo")$alt)
allcol_somatic_notinherited_LOH_dndscv<-data.frame("sampleID"= subset(allcol, Inheritance=="notinherited" & GoHorLoH=="LoH")$sample,"chr"= subset(allcol, Inheritance=="notinherited" & GoHorLoH=="LoH")$chrom,"pos"= subset(allcol, Inheritance=="notinherited" & GoHorLoH=="LoH")$pos, "ref" = subset(allcol, Inheritance=="notinherited" & GoHorLoH=="LoH")$ref, "alt"= subset(allcol, Inheritance=="notinherited" & GoHorLoH=="LoH")$alt)
CA56_uglm_spec<-spectrum(uniqueuglmCA56df,nrow(uniqueuglmCA56df0))
CA60_uglm_spec<-spectrum(uniqueuglmCA60df,nrow(uniqueuglmCA60df0))
CA65_uglm_spec<-spectrum(uniqueuglmCA65df,nrow(uniqueuglmCA65df))
allcol_uglm<-rbind(uniqueuglmCA56df, uniqueuglmCA60df, uniqueuglmCA65df)
allcol_uglm_GOH<- subset(allcol_uglm, GoH_or_LoH=="DeNovo")
allcol_uglm_GOH_dndscv<-data.frame("sampleID"= allcol_uglm_GOH$sample,"chr"= allcol_uglm_GOH$chrom,"pos"= allcol_uglm_GOH$pos, "ref" = allcol_uglm_GOH$ref, "alt"= allcol_uglm_GOH$alt)
allcol_uglm_LOH<- subset(allcol_uglm, GoH_or_LoH=="LoH")
allcol_uglm_LOH_dndscv<-data.frame("sampleID"= allcol_uglm_LOH$sample,"chr"= allcol_uglm_LOH$chrom,"pos"= allcol_uglm_LOH$pos, "ref" = allcol_uglm_LOH$ref, "alt"= allcol_uglm_LOH$alt)
allcol_uglm_spec<-spectrum(allcol_uglm, nrow(allcol_uglm)) + ggtitle("Single Sperm Pool Only SNVs")
allcol_uglm_dndscv<-data.frame("sampleID"= allcol_uglm$sample,"chr"= allcol_uglm$chrom,"pos"= allcol_uglm$pos, "ref" = allcol_uglm$ref, "alt"= allcol_uglm$alt)
allcol_gglm<-rbind(gglmCA56df, gglmCA60df, gglmCA65df)
allcol_gglm_spec<-spectrum(allcol_gglm, nrow(allcol_gglm)) + ggtitle("All Sperm Pool SNVs")
allcol_gglm_dndscv<-data.frame("sampleID"= allcol_gglm$sample,"chr"= allcol_gglm$chrom,"pos"= allcol_gglm$pos, "ref" = allcol_gglm$ref, "alt"= allcol_gglm$alt)
#write.table(allcol_gglm_dndscv,file="~/Documents/GitHub/CoralGermline/dndscv/gglmallcolonies_20201210_dndscv.txt",sep="\t",quote=FALSE, row.name=FALSE)
allcol_gglm_LOH<- subset(allcol_gglm, GoH_or_LoH=="LoH")
allcol_gglm_GOH<- subset(allcol_gglm, GoH_or_LoH=="DeNovo")
#this is figure 6:
(allcol_somatic_all | allcol_somatic_inherited | allcol_somatic_notinherited) / (allcol_uglm_spec | allcol_gglm_spec)
allcol_somatic_all | allcol_somatic_GOH | allcol_somatic_LOH
##end figure 6##
suppfig2<-(allcol_somatic_inherited | allcol_somatic_notinherited) / (allcol_uglm_spec | allcol_gglm_spec) / (allcol_somatic_GOH | allcol_somatic_LOH)
suppfig2
nrow(CA56_)
nrow(CA60_)
nrow(CA65_)
head(CA65_)
write.table(allcol_somatic_all_dndscv, file="~/Documents/GitHub/CoralGermline/dndscv/somaticallcolonies_20210622_dndscv.txt",sep="\t",quote=FALSE, row.name=FALSE)
write.table(allcol_somatic_GOH_dndscv, file="~/Documents/GitHub/CoralGermline/dndscv/somaticallcoloniesGOH_20210622_dndscv.txt",sep="\t",quote=FALSE, row.name=FALSE)
write.table(allcol_somatic_LOH_dndscv, file="~/Documents/GitHub/CoralGermline/dndscv/somaticallcoloniesLOH_20210622_dndscv.txt",sep="\t",quote=FALSE, row.name=FALSE)
write.table(CA56_somatic_inherited_dndscv, file="~/Documents/GitHub/CoralGermline/dndscv/somaticCA56inherited_20210622_dndscv.txt",sep="\t",quote=FALSE, row.name=FALSE)
write.table(CA60_somatic_inherited_dndscv, file="~/Documents/GitHub/CoralGermline/dndscv/somaticCA60inherited_20210622_dndscv.txt",sep="\t",quote=FALSE, row.name=FALSE)
write.table(CA65_somatic_inherited_dndscv, file="~/Documents/GitHub/CoralGermline/dndscv/somaticCA65oniesinherited_20210622_dndscv.txt",sep="\t",quote=FALSE, row.name=FALSE)
write.table(allcol_somatic_inherited_dndscv, file="~/Documents/GitHub/CoralGermline/dndscv/somaticallcoloniesinherited_20210622_dndscv.txt",sep="\t",quote=FALSE, row.name=FALSE)
write.table(allcol_somatic_inherited_GOH_dndscv, file="~/Documents/GitHub/CoralGermline/dndscv/somaticallcoloniesinherited_GOH_20210622_dndscv.txt",sep="\t",quote=FALSE, row.name=FALSE)
#write.table(allcol_somatic_inherited_GOH_dndscv, file="~/Documents/GitHub/CoralGermline/dndscv/somaticallcoloniesinherited_GOH_20210622_dndscv.txt",sep="\t",quote=FALSE, row.name=FALSE)
write.table(allcol_somatic_inherited_LOH_dndscv, file="~/Documents/GitHub/CoralGermline/dndscv/somaticallcoloniesinherited_LOH_20210622_dndscv.txt",sep="\t",quote=FALSE, row.name=FALSE)
write.table(allcol_somatic_notinherited_dndscv, file="~/Documents/GitHub/CoralGermline/dndscv/somaticallcoloniesnotinherited_20210622_dndscv.txt",sep="\t",quote=FALSE, row.name=FALSE)
write.table(allcol_somatic_notinherited_GOH_dndscv, file="~/Documents/GitHub/CoralGermline/dndscv/somaticallcoloniesnotinherited_GOH_20210622_dndscv.txt",sep="\t",quote=FALSE, row.name=FALSE)
#write.table(allcol_somatic_notinherited_GOH_dndscv, file="~/Documents/GitHub/CoralGermline/dndscv/somaticallcoloniesnotinherited_GOH_20210622_dndscv.txt",sep="\t",quote=FALSE, row.name=FALSE)
write.table(allcol_somatic_notinherited_LOH_dndscv, file="~/Documents/GitHub/CoralGermline/dndscv/somaticallcoloniesnotinherited_LOH_20210622_dndscv.txt",sep="\t",quote=FALSE, row.name=FALSE)
write.table(allcol_uglm_GOH_dndscv,file="~/Documents/GitHub/CoralGermline/dndscv/uglmallcolonies_GOH_20210622_dndscv.txt",sep="\t",quote=FALSE, row.name=FALSE)
write.table(allcol_uglm_LOH_dndscv,file="~/Documents/GitHub/CoralGermline/dndscv/uglmallcolonies_LOH_20210622_dndscv.txt",sep="\t",quote=FALSE, row.name=FALSE)
write.table(allcol_uglm_dndscv,file="~/Documents/GitHub/CoralGermline/dndscv/uglmallcolonies_20210622_dndscv.txt",sep="\t",quote=FALSE, row.name=FALSE)
write.table(allcol_gglm_dndscv,file="~/Documents/GitHub/CoralGermline/dndscv/gglmallcolonies_20210622_dndscv.txt",sep="\t",quote=FALSE, row.name=FALSE)
dndsout = dndscv(read.delim("~/Documents/GitHub/CoralGermline/dndscv/somaticallcolonies_20210622_dndscv.txt"), refdb="~/Documents/GitHub/CoralGermline/mappedtoahya/AhyaRefCDS20210326.rda", cv=NULL)
dndsout_somatic<-dnds_func("~/Documents/GitHub/CoralGermline/dndscv/somaticallcolonies_20210622_dndscv.txt")
dndsout_somatic_GOH<-dnds_func("~/Documents/GitHub/CoralGermline/dndscv/somaticallcoloniesGOH_20210622_dndscv.txt")
dndsout_somatic_LOH<-dnds_func("~/Documents/GitHub/CoralGermline/dndscv/somaticallcoloniesLOH_20210622_dndscv.txt")
dndsout_somatic_inherited<-dnds_func("~/Documents/GitHub/CoralGermline/dndscv/somaticallcoloniesinherited_20210622_dndscv.txt")
dndsout_somatic_inherited_GOH<-dnds_func("~/Documents/GitHub/CoralGermline/dndscv/somaticallcoloniesinherited_GOH_20210622_dndscv.txt")
dndsout_somatic_inherited_LOH<-dnds_func("~/Documents/GitHub/CoralGermline/dndscv/somaticallcoloniesinherited_LOH_20210622_dndscv.txt")
dndsout_somatic_notinherited<-dnds_func("~/Documents/GitHub/CoralGermline/dndscv/somaticallcoloniesnotinherited_20210622_dndscv.txt")
dndsout_somatic_notinherited_GOH<-dnds_func("~/Documents/GitHub/CoralGermline/dndscv/somaticallcoloniesnotinherited_GOH_20210622_dndscv.txt")
dndsout_somatic_notinherited_LOH<-dnds_func("~/Documents/GitHub/CoralGermline/dndscv/somaticallcoloniesnotinherited_LOH_20210622_dndscv.txt")
dndsout_uglm<-dnds_func("~/Documents/GitHub/CoralGermline/dndscv/uglmallcolonies_20210622_dndscv.txt")
dndsout_uglm_GOH<-dnds_func("~/Documents/GitHub/CoralGermline/dndscv/uglmallcolonies_GOH_20210622_dndscv.txt")
dndsdndsout_uglm_LOH<-dnds_func("~/Documents/GitHub/CoralGermline/dndscv/uglmallcolonies_LOH_20210622_dndscv.txt")
dndsout_gglm<-dnds_func("~/Documents/GitHub/CoralGermline/dndscv/gglmallcolonies_20210622_dndscv.txt")
dndsout_GOH<-dnds_func("~/Documents/GitHub/CoralGermline/dndscv/GOH_all_20210622_dndscv.txt")
dndsout_LOH<-dnds_func("~/Documents/GitHub/CoralGermline/dndscv/LOH_all_20210622_dndscv.txt")
wall<-rbind(dndsout_somatic_inherited$wall, dndsout_somatic_notinherited$wall, dndsout_uglm$wall)
wmis<-rbind(dndsout_somatic_inherited$wmis, dndsout_somatic_notinherited$wmis, dndsout_uglm$wmis)
wnon<-rbind(dndsout_somatic_inherited$wnon, dndsout_somatic_notinherited$wnon, dndsout_uglm$wnon)
wall<-rbind(dndsout_uglm_GOH$wall, dndsout_uglm_LOH$wall, dndsout_somatic_inherited_GOH$wall,
dndsout_somatic_notinherited_GOH$wall, dndsout_somatic_notinherited_LOH$wall)#$wall, dndsout_somatic_notinherited$wall, dndsout_somatic_notinherited_loh$wall, dndsout_somatic_notinherited_denovo)
cat<-c("SSPO, GOH","SSPO, LOH","P+S, GOH",
"PO, GOH","PO, LOH")
wall<-rbind(dndsout_somatic_GOH$wall, dndsout_somatic_inherited_GOH$wall, dndsout_somatic_notinherited_GOH$wall, dndsout_uglm_GOH$wall)
wmis<-rbind(dndsout_somatic$wmis, dndsout_uglm$wmis, dndsout_uglm_GOH$wmis, dndsout_uglm_LOH$wmis, dndsout_somatic_inherited_GOH$wmis,
dndsout_somatic_notinherited_GOH$wmis, dndsout_somatic_notinherited_LOH$wmis)
wnon<-rbind(dndsout_somatic$wnon, dndsout_uglm$wnon, dndsout_uglm_GOH$wnon, dndsout_uglm_LOH$wnon, dndsout_somatic_inherited_GOH$wnon,
dndsout_somatic_notinherited_GOH$wnon, dndsout_somatic_notinherited_LOH$wnon)
colony<-c("Somatic", "Not Inherited Somatic", "Not inherited LoH","Not inherited denovo")#, "CA60","CA60", "CA65", "CA65")
colony<-c("all","denovo","loh", "inherited","notinherited", "uglm", "not inherited_loh","not inherited_denovo")
colony<-c("All Somatic","Unique GLM", "uglm GOH", "uglm LOH" , "Inh GOH","NotINh GOH","NotInh LOH")
wall<-rbind(dndsout_somatic_inherited, dndsout_somatic_notinherited, dndsout_uglm)
colony<-c("All","Inherited Somatic", "Not Inherited Somatic","Germline")
mle<-wall$mle
cilow<-wall$cilow
cihigh<-wall$cihigh
wbind<-rbind(wall,wmis,wnon)
mle<-wbind$mle
cilow<-wbind$cilow
cihigh<-wbind$cihigh
w_typez<-wbind$name
#category<-rep(c("All Somatic","Unique GLM", "uglm GOH", "uglm LOH" , "Inh GOH","NotINh GOH","NotInh LOH"),3)
category<-rep(c("Inherited","Not inherited","Unique GLM"),3)
category_wall<-c("Inherited","Not inherited","Unique GLM")
mle_wall<-wall$mle
barplot(mle)
boxplot(mle~colony, xlab="Colony Name", ylab="global dN/dS", las=1, col=c("light blue","light gray","light green"))
dndscvplot_wbind<-ggplot(wbind,
aes(x = category,
y = mle,
group = w_typez, colour=w_typez)) +
geom_point(size = 3, position=position_dodge(width=0.3)) +
geom_errorbar(aes(ymin = cilow,
ymax = cihigh),
width = .1, position=position_dodge(width=0.3)) +
theme_bw() +coord_cartesian(ylim=c(0,8))+
theme(axis.text=element_text(size=20),
axis.title=element_text(size=25),
axis.text.x = element_text(angle = 90))+
labs(y="dN/dS", x="") +
geom_hline(yintercept=1, linetype="dashed",
color = "red", size=1)
cat<-c("SSPO, GOH","SSPO, LOH","P+S, GOH",
"PO, GOH","PO, LOH")
wall<-rbind(dndsout_uglm_GOH$wall, dndsout_uglm_LOH$wall, dndsout_somatic_inherited_GOH$wall,
dndsout_somatic_notinherited_GOH$wall, dndsout_somatic_notinherited_LOH$wall)#$wall, dndsout_somatic_notinherited$wall, dndsout_somatic_notinherited_loh$wall, dndsout_somatic_notinherited_denovo)
mle<-wall$mle
cilow<-wall$cilow
cihigh<-wall$cihigh
wbind<-rbind(wall,wmis,wnon)
mle<-wbind$mle
cilow<-wbind$cilow
cihigh<-wbind$cihigh
w_typez<-wbind$name
barplot(mle)
mle
wall
wall<-rbind(dndsout_uglm_GOH$wall, dndsout_uglm_LOH$wall, dndsout_somatic_inherited_GOH$wall,
dndsout_somatic_notinherited_GOH$wall, dndsout_somatic_notinherited_LOH$wall)#$wall, dndsout_somatic_notinherited$wall, dndsout_somatic_notinherited_loh$wall, dndsout_somatic_notinherited_denovo)
wall<-rbind(dndsout_uglm_LOH$wall, dndsout_somatic_inherited_GOH$wall,
dndsout_somatic_notinherited_GOH$wall, dndsout_somatic_notinherited_LOH$wall)#$wall, dndsout_somatic_notinherited$wall, dndsout_somatic_notinherited_loh$wall, dndsout_somatic_notinherited_denovo)
dndsout_somatic_inherited_GOH$wall
dndsout_uglm$wall
dndsout_uglm
dndsout_uglm_LOH$globaldnds
dndsout_uglm$globaldnds
dndsout_uglm$globaldnds$wall
?geneci
dndsout_somatic
dndsout_somatic$globaldnds
geneci(dndsout_somatic, outmats=T)
dataset<-"~/Documents/GitHub/CoralGermline/dndscv/CAcolony56somatic_onlychrs20200616_dndscv.txt"
dndsout = dndscv(dataset, refdb="Ahyacinthus_CDS_20210615.rda", cv=NULL, outmats=T)
dataset<-"~/Documents/GitHub/CoralGermline/dndscv/allcolonies_onlychrs20200615_dndscv.txt"
dndsout = dndscv(dataset, refdb="Ahyacinthus_CDS_20210615.rda", cv=NULL, outmats=T)
head(dataset)
dataset<-read.delim("~/Documents/GitHub/CoralGermline/dndscv/allcolonies_onlychrs20200615_dndscv.txt")
head(dataset)
dndsout = dndscv(dataset, refdb="Ahyacinthus_CDS_20210615.rda", cv=NULL, outmats=T)
